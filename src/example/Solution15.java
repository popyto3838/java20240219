package example;

import java.util.HashMap;

//1512번

//


public class Solution15 {
    public int numIdenticalPairs(int[] nums) {
        int count = 0;
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int num : nums) {
            if (map.containsKey(num)) {
                count += map.get(num);
            }
            map.put(num, map.getOrDefault(num, 0) + 1);
        }
        return count;
    }


//    예시:
//
//    Java
//    int[] nums = {1, 2, 3, 1, 1, 3};
//    코드를 사용할 때는 주의가 필요합니다.
//1. 초기화:
//
//    count는 0으로 초기화됩니다.
//    map은 비어있는 상태입니다.
//2. for문:
//
//    첫 번째 반복:
//
//    num은 1입니다.
//            map에는 1이 존재하지 않으므로 else 블록으로 이동합니다.
//    map에 1을 키로, 1을 값으로 추가합니다.
//    두 번째 반복:
//
//    num은 2입니다.
//            map에는 2이 존재하지 않으므로 else 블록으로 이동합니다.
//    map에 2을 키로, 1을 값으로 추가합니다.
//    세 번째 반복:
//
//    num은 3입니다.
//            map에는 3이 존재하지 않으므로 else 블록으로 이동합니다.
//    map에 3을 키로, 1을 값으로 추가합니다.
//    네 번째 반복:
//
//    num은 1입니다.
//            map에는 1이 존재합니다.
//    map에서 1의 값을 가져오는데, 현재 값은 1입니다.
//            count는 1 증가하여 1이 됩니다.
//    map에 1의 값을 2로 업데이트합니다.
//    다섯 번째 반복:
//
//    num은 1입니다.
//            map에는 1이 존재합니다.
//    map에서 1의 값을 가져오는데, 현재 값은 2입니다.
//            count는 2 증가하여 3이 됩니다.
//    map에 1의 값을 3으로 업데이트합니다.
//    여섯 번째 반복:
//
//    num은 3입니다.
//            map에는 3이 존재합니다.
//    map에서 3의 값을 가져오는데, 현재 값은 1입니다.
//            count는 1 증가하여 4이 됩니다.
//    map에 3의 값을 2로 업데이트합니다.
//            3. 반환:
//
//    최종적으로 count는 4입니다.
//4. 각 단계별 변화:
//
//    단계	count	map
//    초기화	0	{}
//    첫 번째 반복	0	{1=1}
//    두 번째 반복	0	{1=1, 2=1}
//    세 번째 반복	0	{1=1, 2=1, 3=1}
//    네 번째 반복	1	{1=2, 2=1, 3=1}
//    다섯 번째 반복	3	{1=3, 2=1, 3=1}
//    여섯 번째 반복	4	{1=3, 2=1, 3=2}
//5. 결론:
//
//    이 예시를 통해 각 단계별 변화를 확인하면서 코드의 작동 방식을 이해할 수 있습니다.
//
//            참고:
//
//    코드를 직접 실행해보면서 각 변수의 값 변화를 확인하는 것이 도움이 됩니다.
//    다른 예시를 만들어 테스트해보는 것도 좋은 방법입니다.
//    추가 설명:
//
//            map.getOrDefault(num, 0): map에 num이 존재하지 않는 경우 0을 반환합니다.
//            map.put(num, map.get(num) + 1): map에 num의 값을 1 증가시킵니다.


}
